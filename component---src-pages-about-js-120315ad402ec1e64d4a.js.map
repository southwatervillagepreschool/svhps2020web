{"version":3,"sources":["webpack:///./src/components/ArticleList.js","webpack:///./src/pages/about.js","webpack:///./src/components/PageArticles.js"],"names":["ArticleList","listOfArticles","map","singleArticle","title","childMarkdownRemark","frontmatter","formattedTitle","replace","toLowerCase","key","to","About","data","useStaticQuery","articles","allFile","nodes","Hero","fluidImage","file","childImageSharp","fluid","imageAlt","tagLine","PageArticles","filteredList","filter","a","order","html","id","dangerouslySetInnerHTML","__html"],"mappings":"yLAwBeA,EAtBK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACrB,OACE,6BACE,4BACGA,EAAeC,KAAI,SAAAC,GAAkB,IAE5BC,EADgBD,EAAcE,oBAA9BC,YACAF,MACFG,EAAiBH,EACnBA,EAAMI,QAAQ,KAAM,KAAKC,cACzB,GACJ,OACE,wBAAIC,IAAKN,GACP,kBAAC,OAAD,CAAMO,GAAE,UAAYJ,GAAmBH,UCwCtCQ,UA7CD,WAKZ,IAAMC,EAAOC,yBAAe,cA0BtBC,EAAQ,YAAOF,EAAKG,QAAQC,OAClC,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAYN,EAAKO,KAAKC,gBAAgBC,MACtCC,SAAS,GACTC,QAAQ,wBAEV,kBAAC,EAAD,CAAavB,eAAgBc,IAC7B,kBAACU,EAAA,EAAD,CAAcxB,eAAgBc,O,kCCjDpC,yBAiCeU,IA/BM,SAAC,GAAwB,IAEtCC,EAFqC,EAArBzB,eAEc0B,QAClC,SAAAC,GAAC,OAAIA,EAAEvB,oBAAoBC,YAAYuB,OAAS,KAGlD,OACE,oCACGH,EAAaxB,KAAI,SAAAC,GAAkB,IAAD,EACHA,EAAcE,oBAApCC,EADyB,EACzBA,YAAawB,EADY,EACZA,KACb1B,EAAUE,EAAVF,MACFG,EAAiBH,EACnBA,EAAMI,QAAQ,KAAM,KAAKC,cACzB,GAEJ,OACE,6BAASC,IAAKN,GACXA,GAAS,wBAAI2B,GAAIxB,GAAiBH,GACnC,6BACE4B,wBAAyB,CACvBC,OAAQH","file":"component---src-pages-about-js-120315ad402ec1e64d4a.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nconst ArticleList = ({ listOfArticles }) => {\n  return (\n    <nav>\n      <ul>\n        {listOfArticles.map(singleArticle => {\n          const { frontmatter } = singleArticle.childMarkdownRemark\n          const { title } = frontmatter\n          const formattedTitle = title\n            ? title.replace(/ /g, \"-\").toLowerCase()\n            : \"\"\n          return (\n            <li key={title}>\n              <Link to={`/about/${formattedTitle}`}>{title}</Link>\n              {/* <link to={`/about/${formattedTitle}`}>{title}</link> */}\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\n\nexport default ArticleList\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Hero2 from \"../components/Hero\"\nimport PageArticles from \"../components/PageArticles\"\n\nimport ArticleList from \"../components/ArticleList\"\n// import { NavDispatchContext } from \"../NavigationProviders\"\n\nconst About = () => {\n  // const navStatus = useContext(NavContext)\n  // const setNavStatus = useContext(NavDispatchContext)\n\n  // console.log(\"status:\", navStatus)\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(\n        filter: { sourceInstanceName: { eq: \"aboutPage\" } }\n        sort: { fields: childMarkdownRemark___frontmatter___order, order: ASC }\n      ) {\n        nodes {\n          childMarkdownRemark {\n            frontmatter {\n              title\n              order\n            }\n            html\n          }\n        }\n      }\n      file(relativePath: { eq: \"037.jpg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const articles = [...data.allFile.nodes]\n  return (\n    <Layout>\n      <Hero2\n        fluidImage={data.file.childImageSharp.fluid}\n        imageAlt=\"\"\n        tagLine=\"About Our Preschool\"\n      />\n      <ArticleList listOfArticles={articles} />\n      <PageArticles listOfArticles={articles} />\n    </Layout>\n  )\n}\n\nexport default About\n","import React from \"react\"\n\nconst PageArticles = ({ listOfArticles }) => {\n  // do not display any articles with a value less than one.\n  const filteredList = listOfArticles.filter(\n    a => a.childMarkdownRemark.frontmatter.order >= 1\n  )\n\n  return (\n    <>\n      {filteredList.map(singleArticle => {\n        const { frontmatter, html } = singleArticle.childMarkdownRemark\n        const { title } = frontmatter\n        const formattedTitle = title\n          ? title.replace(/ /g, \"_\").toLowerCase()\n          : \"\"\n\n        return (\n          <article key={title}>\n            {title && <h2 id={formattedTitle}>{title}</h2>}\n            <section\n              dangerouslySetInnerHTML={{\n                __html: html,\n              }}\n            ></section>\n            {/* <hr /> */}\n          </article>\n        )\n      })}\n    </>\n  )\n}\n\nexport default PageArticles\n"],"sourceRoot":""}