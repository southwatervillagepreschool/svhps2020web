{"version":3,"sources":["webpack:///./src/components/ArticleList.js","webpack:///./src/pages/about.js","webpack:///./src/components/PageArticles.js"],"names":["ArticleList","listOfArticles","map","singleArticle","title","childMarkdownRemark","frontmatter","formattedTitle","replace","toLowerCase","key","to","About","data","useStaticQuery","articles","allFile","nodes","Layout","Hero","fluidImage","file","childImageSharp","fluid","imageAlt","tagLine","PageArticles","filteredList","filter","a","order","html","id","dangerouslySetInnerHTML","__html"],"mappings":"yLAwBeA,EAtBK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACrB,OACE,6BACE,4BACGA,EAAeC,KAAI,SAAAC,GAAkB,IAE5BC,EADgBD,EAAcE,oBAA9BC,YACAF,MACFG,EAAiBH,EACnBA,EAAMI,QAAQ,KAAM,KAAKC,cACzB,GACJ,OACE,wBAAIC,IAAKN,GACP,kBAAC,OAAD,CAAMO,GAAE,UAAYJ,GAAmBH,UCwCtCQ,UA7CD,WAKZ,IAAMC,EAAOC,yBAAe,cA0BtBC,EAAQ,YAAOF,EAAKG,QAAQC,OAClC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAYP,EAAKQ,KAAKC,gBAAgBC,MACtCC,SAAS,GACTC,QAAQ,wBAEV,kBAAC,EAAD,CAAaxB,eAAgBc,IAC7B,kBAACW,EAAA,EAAD,CAAczB,eAAgBc,O,kCCjDpC,yBAiCeW,IA/BM,SAAC,GAAwB,IAEtCC,EAFqC,EAArB1B,eAEc2B,QAClC,SAAAC,GAAC,OAAIA,EAAExB,oBAAoBC,YAAYwB,OAAS,KAGlD,OACE,oCACGH,EAAazB,KAAI,SAAAC,GAAkB,IAAD,EACHA,EAAcE,oBAApCC,EADyB,EACzBA,YAAayB,EADY,EACZA,KACb3B,EAAUE,EAAVF,MACFG,EAAiBH,EACnBA,EAAMI,QAAQ,KAAM,KAAKC,cACzB,GAEJ,OACE,6BAASC,IAAKN,GACXA,GAAS,wBAAI4B,GAAIzB,GAAiBH,GACnC,6BACE6B,wBAAyB,CACvBC,OAAQH","file":"component---src-pages-about-js-db534f4606611dcce7e6.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nconst ArticleList = ({ listOfArticles }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        {listOfArticles.map(singleArticle => {\r\n          const { frontmatter } = singleArticle.childMarkdownRemark\r\n          const { title } = frontmatter\r\n          const formattedTitle = title\r\n            ? title.replace(/ /g, \"-\").toLowerCase()\r\n            : \"\"\r\n          return (\r\n            <li key={title}>\r\n              <Link to={`/about/${formattedTitle}`}>{title}</Link>\r\n              {/* <link to={`/about/${formattedTitle}`}>{title}</link> */}\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default ArticleList\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\nimport Hero2 from \"../components/Hero\"\r\nimport PageArticles from \"../components/PageArticles\"\r\n\r\nimport ArticleList from \"../components/ArticleList\"\r\n// import { NavDispatchContext } from \"../NavigationProviders\"\r\n\r\nconst About = () => {\r\n  // const navStatus = useContext(NavContext)\r\n  // const setNavStatus = useContext(NavDispatchContext)\r\n\r\n  // console.log(\"status:\", navStatus)\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allFile(\r\n        filter: { sourceInstanceName: { eq: \"aboutPage\" } }\r\n        sort: { fields: childMarkdownRemark___frontmatter___order, order: ASC }\r\n      ) {\r\n        nodes {\r\n          childMarkdownRemark {\r\n            frontmatter {\r\n              title\r\n              order\r\n            }\r\n            html\r\n          }\r\n        }\r\n      }\r\n      file(relativePath: { eq: \"037.jpg\" }) {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const articles = [...data.allFile.nodes]\r\n  return (\r\n    <Layout>\r\n      <Hero2\r\n        fluidImage={data.file.childImageSharp.fluid}\r\n        imageAlt=\"\"\r\n        tagLine=\"About Our Preschool\"\r\n      />\r\n      <ArticleList listOfArticles={articles} />\r\n      <PageArticles listOfArticles={articles} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from \"react\"\r\n\r\nconst PageArticles = ({ listOfArticles }) => {\r\n  // do not display any articles with a value less than one.\r\n  const filteredList = listOfArticles.filter(\r\n    a => a.childMarkdownRemark.frontmatter.order >= 1\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {filteredList.map(singleArticle => {\r\n        const { frontmatter, html } = singleArticle.childMarkdownRemark\r\n        const { title } = frontmatter\r\n        const formattedTitle = title\r\n          ? title.replace(/ /g, \"_\").toLowerCase()\r\n          : \"\"\r\n\r\n        return (\r\n          <article key={title}>\r\n            {title && <h2 id={formattedTitle}>{title}</h2>}\r\n            <section\r\n              dangerouslySetInnerHTML={{\r\n                __html: html,\r\n              }}\r\n            ></section>\r\n            {/* <hr /> */}\r\n          </article>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PageArticles\r\n"],"sourceRoot":""}